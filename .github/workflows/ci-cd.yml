name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  REGISTRY: docker.io

jobs:
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # JOB 1: Build and Test Backend Services
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  build-backend:
    name: Build & Test Backend Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [student-service, feedback-service, admin-service]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./${{ matrix.service }}
        run: npm ci

      - name: 🔍 Verify Build
        working-directory: ./${{ matrix.service }}
        run: |
          echo "✅ Dependencies installed successfully"
          echo "📦 Package: $(node -p "require('./package.json').name")"
          echo "📌 Version: $(node -p "require('./package.json').version")"

      - name: 🧪 Run Tests (if configured)
        working-directory: ./${{ matrix.service }}
        run: |
          if grep -q '"test":' package.json && ! grep -q 'Error: no test specified' package.json; then
            echo "Running tests..."
            npm test
          else
            echo "✅ No tests configured, skipping test step..."
          fi

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: ${{ matrix.service }}/
          retention-days: 1

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # JOB 2: Build and Test Frontend
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🏗️ Build Frontend
        working-directory: ./frontend
        run: npm run build
        env:
          VITE_STUDENT_API_URL: http://localhost:3001/api
          VITE_FEEDBACK_API_URL: http://localhost:3002/api
          VITE_ADMIN_API_URL: http://localhost:3003/api

      - name: ✅ Build Verification
        working-directory: ./frontend
        run: |
          if [ -d "dist" ]; then
            echo "✅ Frontend build successful"
            echo "📦 Build size: $(du -sh dist | cut -f1)"
          else
            echo "❌ Build failed - dist folder not found"
            exit 1
          fi

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 1

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # JOB 3: Security Scanning with Trivy
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  security-scan:
    name: Security Scan (DevSecOps)
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # JOB 4: Build and Push Docker Images
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  docker-build-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    strategy:
      matrix:
        include:
          - service: student-service
            context: ./student-service
          - service: feedback-service
            context: ./feedback-service
          - service: admin-service
            context: ./admin-service
          - service: student-feedback-frontend
            context: ./frontend
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏷️ Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: 🔒 Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # JOB 5: Deployment Ready Notification
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  deploy-notification:
    name: Deployment Ready Notification
    runs-on: ubuntu-latest
    needs: [docker-build-push]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🎉 Deployment Summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ CI/CD PIPELINE COMPLETED SUCCESSFULLY!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "🐳 Docker Images Published:"
          echo "   • ${{ secrets.DOCKER_USERNAME }}/student-service:latest"
          echo "   • ${{ secrets.DOCKER_USERNAME }}/feedback-service:latest"
          echo "   • ${{ secrets.DOCKER_USERNAME }}/admin-service:latest"
          echo "   • ${{ secrets.DOCKER_USERNAME }}/student-feedback-frontend:latest"
          echo ""
          echo "☸️  To deploy to Kubernetes, run:"
          echo ""
          echo "   kubectl rollout restart deployment/student-service -n student-feedback"
          echo "   kubectl rollout restart deployment/feedback-service -n student-feedback"
          echo "   kubectl rollout restart deployment/admin-service -n student-feedback"
          echo "   kubectl rollout restart deployment/frontend -n student-feedback"
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"